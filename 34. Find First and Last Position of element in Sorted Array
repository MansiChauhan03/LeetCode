                                **************************************JAVA************************************
class Solution {
    public int[] searchRange(int[] nums, int target) {
        int start = findFirstOccurrence(nums, target);
        
        if (start == -1) {
            return new int[]{-1, -1}; // Target not found
        }
        
        int end = findLastOccurrence(nums, target);
        
        return new int[]{start, end};
    }
    
    private int findFirstOccurrence(int[] nums, int target) {
        int low = 0;
        int high = nums.length - 1;
        int result = -1;
        
        while (low <= high) {
            int mid = low + (high - low) / 2;
            
            if (nums[mid] == target) {
                result = mid;
                high = mid - 1; // Move left to find the first occurrence
            } else if (nums[mid] < target) {
                low = mid + 1;
            } else {
                high = mid - 1;
            }
        }
        
        return result;
    }
    
    private int findLastOccurrence(int[] nums, int target) {
        int low = 0;
        int high = nums.length - 1;
        int result = -1;
        
        while (low <= high) {
            int mid = low + (high - low) / 2;
            
            if (nums[mid] == target) {
                result = mid;
                low = mid + 1; // Move right to find the last occurrence
            } else if (nums[mid] < target) {
                low = mid + 1;
            } else {
                high = mid - 1;
            }
        }
        
        return result;
    }
}
